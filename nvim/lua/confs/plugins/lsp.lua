local f=require('lspconfig')local a=require('null-ls')local b={noremap=true,silent=true}local c;c=function(e,g)vim.api.nvim_buf_set_keymap(g,'n','gD','<Cmd>lua vim.lsp.buf.declarations()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','gd','<Cmd>lua vim.lsp.buf.definition()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','gh','<Cmd>lua vim.lsp.buf.hover()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','gi','<Cmd>lua vim.lsp.buf.implementation()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','<C-k>','<Cmd>lua vim.lsp.buf.signature_help()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','<leader>rm','<Cmd>lua vim.lsp.buf.rename()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','<leader>rr','<Cmd>lua vim.lsp.buf.references()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','<leader>d','<Cmd>lua vim.diagnostic.open_float()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','<leader>i','<Cmd>lua vim.lsp.buf.code_action()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n','[d','<Cmd>lua vim.diagnostic.goto_prev()<CR>',b)vim.api.nvim_buf_set_keymap(g,'n',']d','<Cmd>lua vim.diagnostic.goto_next()<CR>',b)if e.resolved_capabilities.document_formatting then vim.api.nvim_buf_set_keymap(g,'n','<leader>=','<Cmd>lua vim.lsp.buf.formatting()<CR>',b)vim.api.nvim_buf_set_keymap(g,'v','<leader>=','<Cmd>lua vim.lsp.buf.formatting()<CR>',b)vim.cmd([[				augroup LspFormatting
					autocmd! * <buffer>
					autocmd BufWritePre <buffer> lua vim.lsp.buf.formatting_sync()
				augroup END
			]])end;return true end;a.setup({sources={a.builtins.formatting.stylua,a.builtins.diagnostics.eslint,a.builtins.completion.spell},on_attach=c})local d=vim.lsp.protocol.make_client_capabilities()for e,g in pairs({'pyright','gopls','rust_analyzer','metals'})do f[g].setup({on_attach=c,capabilities=d})end;return true